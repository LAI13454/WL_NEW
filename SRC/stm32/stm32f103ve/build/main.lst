ARM GAS  /tmp/ccgKkeFl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB68:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccgKkeFl.s 			page 2


  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f1xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "bsp_led.h"
  45:Src/main.c    **** #include "bsp_uart_receive.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** uint32_t watch_main;
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   *
  71:Src/main.c    ****   * @retval None
  72:Src/main.c    ****   */
  73:Src/main.c    **** int main(void)
  74:Src/main.c    **** {
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccgKkeFl.s 			page 3


  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
  98:Src/main.c    ****   LED_Config();
  99:Src/main.c    ****   UART_Receive_Config();
 100:Src/main.c    ****   /* USER CODE END 2 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Infinite loop */
 103:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END WHILE */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 3 */
 110:Src/main.c    ****     HAL_Delay(1000);
 111:Src/main.c    ****     watch_main = USART1->CR1;
 112:Src/main.c    ****     while((USART1->SR & (0x01<<5)) != 1);
 113:Src/main.c    ****     USART1->SR &=~ (0x01 << 5);
 114:Src/main.c    ****     LED_1_TOGGLE;
 115:Src/main.c    ****   }
 116:Src/main.c    ****   /* USER CODE END 3 */
 117:Src/main.c    **** 
 118:Src/main.c    **** }
 119:Src/main.c    **** 
 120:Src/main.c    **** /**
 121:Src/main.c    ****   * @brief System Clock Configuration
 122:Src/main.c    ****   * @retval None
 123:Src/main.c    ****   */
 124:Src/main.c    **** void SystemClock_Config(void)
 125:Src/main.c    **** {
 126:Src/main.c    **** 
 127:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 128:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 129:Src/main.c    **** 
 130:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****     */
 132:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 133:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 135:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Src/main.c    ****   {
 141:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 142:Src/main.c    ****   }
 143:Src/main.c    **** 
 144:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****     */
 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /tmp/ccgKkeFl.s 			page 4


 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 156:Src/main.c    ****   }
 157:Src/main.c    **** 
 158:Src/main.c    ****     /**Configure the Systick interrupt time 
 159:Src/main.c    ****     */
 160:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 161:Src/main.c    **** 
 162:Src/main.c    ****     /**Configure the Systick 
 163:Src/main.c    ****     */
 164:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 165:Src/main.c    **** 
 166:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 167:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 168:Src/main.c    **** }
 169:Src/main.c    **** 
 170:Src/main.c    **** /** Configure pins as 
 171:Src/main.c    ****         * Analog 
 172:Src/main.c    ****         * Input 
 173:Src/main.c    ****         * Output
 174:Src/main.c    ****         * EVENT_OUT
 175:Src/main.c    ****         * EXTI
 176:Src/main.c    **** */
 177:Src/main.c    **** static void MX_GPIO_Init(void)
 178:Src/main.c    **** {
  25              		.loc 1 178 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LBB2:
 179:Src/main.c    **** 
 180:Src/main.c    ****   /* GPIO Ports Clock Enable */
 181:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  34              		.loc 1 181 0
  35 0002 064B     		ldr	r3, .L3
  36 0004 9A69     		ldr	r2, [r3, #24]
  37 0006 42F00402 		orr	r2, r2, #4
  38 000a 9A61     		str	r2, [r3, #24]
  39 000c 9B69     		ldr	r3, [r3, #24]
  40 000e 03F00403 		and	r3, r3, #4
  41 0012 0193     		str	r3, [sp, #4]
  42 0014 019B     		ldr	r3, [sp, #4]
  43              	.LBE2:
 182:Src/main.c    **** 
 183:Src/main.c    **** }
  44              		.loc 1 183 0
  45 0016 02B0     		add	sp, sp, #8
  46              	.LCFI1:
ARM GAS  /tmp/ccgKkeFl.s 			page 5


  47              		.cfi_def_cfa_offset 0
  48              		@ sp needed
  49 0018 7047     		bx	lr
  50              	.L4:
  51 001a 00BF     		.align	2
  52              	.L3:
  53 001c 00100240 		.word	1073876992
  54              		.cfi_endproc
  55              	.LFE68:
  57              		.section	.text._Error_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	_Error_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	_Error_Handler:
  66              	.LFB69:
 184:Src/main.c    **** 
 185:Src/main.c    **** /* USER CODE BEGIN 4 */
 186:Src/main.c    **** 
 187:Src/main.c    **** /* USER CODE END 4 */
 188:Src/main.c    **** 
 189:Src/main.c    **** /**
 190:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 191:Src/main.c    ****   * @param  file: The file name as string.
 192:Src/main.c    ****   * @param  line: The line in file as a number.
 193:Src/main.c    ****   * @retval None
 194:Src/main.c    ****   */
 195:Src/main.c    **** void _Error_Handler(char *file, int line)
 196:Src/main.c    **** {
  67              		.loc 1 196 0
  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.LVL0:
  74              	.L6:
  75 0000 FEE7     		b	.L6
  76              		.cfi_endproc
  77              	.LFE69:
  79              		.section	.text.SystemClock_Config,"ax",%progbits
  80              		.align	1
  81              		.global	SystemClock_Config
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	SystemClock_Config:
  88              	.LFB67:
 125:Src/main.c    **** 
  89              		.loc 1 125 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 64
  92              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Src/main.c    **** 
ARM GAS  /tmp/ccgKkeFl.s 			page 6


  93              		.loc 1 125 0
  94 0000 00B5     		push	{lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 14, -4
  98 0002 91B0     		sub	sp, sp, #68
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 72
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 101              		.loc 1 132 0
 102 0004 0122     		movs	r2, #1
 103 0006 0692     		str	r2, [sp, #24]
 133:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 104              		.loc 1 133 0
 105 0008 4FF48033 		mov	r3, #65536
 106 000c 0793     		str	r3, [sp, #28]
 134:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 107              		.loc 1 134 0
 108 000e 0021     		movs	r1, #0
 109 0010 0891     		str	r1, [sp, #32]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 110              		.loc 1 135 0
 111 0012 0A92     		str	r2, [sp, #40]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 112              		.loc 1 136 0
 113 0014 0222     		movs	r2, #2
 114 0016 0D92     		str	r2, [sp, #52]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 115              		.loc 1 137 0
 116 0018 0E93     		str	r3, [sp, #56]
 138:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 117              		.loc 1 138 0
 118 001a 4FF4E013 		mov	r3, #1835008
 119 001e 0F93     		str	r3, [sp, #60]
 139:Src/main.c    ****   {
 120              		.loc 1 139 0
 121 0020 06A8     		add	r0, sp, #24
 122 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 123              	.LVL1:
 124 0026 08BB     		cbnz	r0, .L11
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125              		.loc 1 146 0
 126 0028 0F23     		movs	r3, #15
 127 002a 0193     		str	r3, [sp, #4]
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 128              		.loc 1 148 0
 129 002c 0221     		movs	r1, #2
 130 002e 0291     		str	r1, [sp, #8]
 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 131              		.loc 1 149 0
 132 0030 0023     		movs	r3, #0
 133 0032 0393     		str	r3, [sp, #12]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 134              		.loc 1 150 0
 135 0034 4FF48062 		mov	r2, #1024
 136 0038 0492     		str	r2, [sp, #16]
 151:Src/main.c    **** 
ARM GAS  /tmp/ccgKkeFl.s 			page 7


 137              		.loc 1 151 0
 138 003a 0593     		str	r3, [sp, #20]
 153:Src/main.c    ****   {
 139              		.loc 1 153 0
 140 003c 01A8     		add	r0, sp, #4
 141 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 142              	.LVL2:
 143 0042 B8B9     		cbnz	r0, .L12
 160:Src/main.c    **** 
 144              		.loc 1 160 0
 145 0044 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 146              	.LVL3:
 147 0048 0C4B     		ldr	r3, .L13
 148 004a A3FB0030 		umull	r3, r0, r3, r0
 149 004e 8009     		lsrs	r0, r0, #6
 150 0050 FFF7FEFF 		bl	HAL_SYSTICK_Config
 151              	.LVL4:
 164:Src/main.c    **** 
 152              		.loc 1 164 0
 153 0054 0420     		movs	r0, #4
 154 0056 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 155              	.LVL5:
 167:Src/main.c    **** }
 156              		.loc 1 167 0
 157 005a 0022     		movs	r2, #0
 158 005c 1146     		mov	r1, r2
 159 005e 4FF0FF30 		mov	r0, #-1
 160 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 161              	.LVL6:
 168:Src/main.c    **** 
 162              		.loc 1 168 0
 163 0066 11B0     		add	sp, sp, #68
 164              	.LCFI4:
 165              		.cfi_remember_state
 166              		.cfi_def_cfa_offset 4
 167              		@ sp needed
 168 0068 5DF804FB 		ldr	pc, [sp], #4
 169              	.L11:
 170              	.LCFI5:
 171              		.cfi_restore_state
 141:Src/main.c    ****   }
 172              		.loc 1 141 0
 173 006c 8D21     		movs	r1, #141
 174 006e 0448     		ldr	r0, .L13+4
 175 0070 FFF7FEFF 		bl	_Error_Handler
 176              	.LVL7:
 177              	.L12:
 155:Src/main.c    ****   }
 178              		.loc 1 155 0
 179 0074 9B21     		movs	r1, #155
 180 0076 0248     		ldr	r0, .L13+4
 181 0078 FFF7FEFF 		bl	_Error_Handler
 182              	.LVL8:
 183              	.L14:
 184              		.align	2
 185              	.L13:
 186 007c D34D6210 		.word	274877907
ARM GAS  /tmp/ccgKkeFl.s 			page 8


 187 0080 00000000 		.word	.LC0
 188              		.cfi_endproc
 189              	.LFE67:
 191              		.section	.text.main,"ax",%progbits
 192              		.align	1
 193              		.global	main
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	main:
 200              	.LFB66:
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
 201              		.loc 1 74 0
 202              		.cfi_startproc
 203              		@ Volatile: function does not return.
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 08B5     		push	{r3, lr}
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 211              		.loc 1 82 0
 212 0002 FFF7FEFF 		bl	HAL_Init
 213              	.LVL9:
  89:Src/main.c    **** 
 214              		.loc 1 89 0
 215 0006 FFF7FEFF 		bl	SystemClock_Config
 216              	.LVL10:
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
 217              		.loc 1 96 0
 218 000a FFF7FEFF 		bl	MX_GPIO_Init
 219              	.LVL11:
  98:Src/main.c    ****   UART_Receive_Config();
 220              		.loc 1 98 0
 221 000e FFF7FEFF 		bl	LED_Config
 222              	.LVL12:
  99:Src/main.c    ****   /* USER CODE END 2 */
 223              		.loc 1 99 0
 224 0012 FFF7FEFF 		bl	UART_Receive_Config
 225              	.LVL13:
 110:Src/main.c    ****     watch_main = USART1->CR1;
 226              		.loc 1 110 0
 227 0016 4FF47A70 		mov	r0, #1000
 228 001a FFF7FEFF 		bl	HAL_Delay
 229              	.LVL14:
 111:Src/main.c    ****     while((USART1->SR & (0x01<<5)) != 1);
 230              		.loc 1 111 0
 231 001e 034B     		ldr	r3, .L18
 232 0020 DA68     		ldr	r2, [r3, #12]
 233 0022 034B     		ldr	r3, .L18+4
 234 0024 1A60     		str	r2, [r3]
 235              	.L16:
 112:Src/main.c    ****     USART1->SR &=~ (0x01 << 5);
 236              		.loc 1 112 0 discriminator 1
ARM GAS  /tmp/ccgKkeFl.s 			page 9


 237 0026 014B     		ldr	r3, .L18
 238 0028 1B68     		ldr	r3, [r3]
 239 002a FCE7     		b	.L16
 240              	.L19:
 241              		.align	2
 242              	.L18:
 243 002c 00380140 		.word	1073821696
 244 0030 00000000 		.word	watch_main
 245              		.cfi_endproc
 246              	.LFE66:
 248              		.comm	watch_main,4,4
 249              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 250              		.align	2
 251              	.LC0:
 252 0000 5372632F 		.ascii	"Src/main.c\000"
 252      6D61696E 
 252      2E6300
 253              		.text
 254              	.Letext0:
 255              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 256              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 257              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 258              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 259              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 260              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 261              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 262              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 263              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 264              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 265              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 266              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 267              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 268              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 269              		.file 16 "HARDWARE/LED/bsp_led.h"
 270              		.file 17 "HARDWARE/UART/bsp_uart_receive.h"
ARM GAS  /tmp/ccgKkeFl.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgKkeFl.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccgKkeFl.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccgKkeFl.s:53     .text.MX_GPIO_Init:000000000000001c $d
     /tmp/ccgKkeFl.s:58     .text._Error_Handler:0000000000000000 $t
     /tmp/ccgKkeFl.s:65     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccgKkeFl.s:80     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccgKkeFl.s:87     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccgKkeFl.s:186    .text.SystemClock_Config:000000000000007c $d
     /tmp/ccgKkeFl.s:192    .text.main:0000000000000000 $t
     /tmp/ccgKkeFl.s:199    .text.main:0000000000000000 main
     /tmp/ccgKkeFl.s:243    .text.main:000000000000002c $d
                            *COM*:0000000000000004 watch_main
     /tmp/ccgKkeFl.s:250    .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
LED_Config
UART_Receive_Config
HAL_Delay
