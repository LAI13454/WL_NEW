ARM GAS  /tmp/cc2jtrSv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_MspInit:
  25              	.LFB68:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @version V1.1.1
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @date    12-May-2017
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cc2jtrSv.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.1
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/cc2jtrSv.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           is needed and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority. 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked. 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  /tmp/cc2jtrSv.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *            
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
ARM GAS  /tmp/cc2jtrSv.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initializes the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 217 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  32              		.loc 1 221 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE68:
  37 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.p2align 2,,3
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_MspDeInit:
  47              	.LFB87:
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE87:
  56 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	1
  58              		.p2align 2,,3
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	HAL_DeInit:
  66              	.LFB67:
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 192 0
  68              		.cfi_startproc
ARM GAS  /tmp/cc2jtrSv.s 			page 6


  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  71              		.loc 1 192 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 194 0
  78 0002 4FF0FF32 		mov	r2, #-1
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  79              		.loc 1 195 0
  80 0006 0024     		movs	r4, #0
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  81              		.loc 1 194 0
  82 0008 044B     		ldr	r3, .L6
  83 000a DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  84              		.loc 1 195 0
  85 000c 1C61     		str	r4, [r3, #16]
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  86              		.loc 1 197 0
  87 000e DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88              		.loc 1 198 0
  89 0010 DC60     		str	r4, [r3, #12]
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
  90              		.loc 1 206 0
  91 0012 FFF7FEFF 		bl	HAL_MspDeInit
  92              	.LVL0:
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  93              		.loc 1 210 0
  94 0016 2046     		mov	r0, r4
  95 0018 10BD     		pop	{r4, pc}
  96              	.L7:
  97 001a 00BF     		.align	2
  98              	.L6:
  99 001c 00100240 		.word	1073876992
 100              		.cfi_endproc
 101              	.LFE67:
 103              		.section	.text.HAL_InitTick,"ax",%progbits
 104              		.align	1
 105              		.p2align 2,,3
 106              		.weak	HAL_InitTick
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu softvfp
 112              	HAL_InitTick:
 113              	.LFB70:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/cc2jtrSv.s 			page 7


 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base. 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 114              		.loc 1 251 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL1:
 119 0000 10B5     		push	{r4, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124              		.loc 1 251 0
 125 0002 0446     		mov	r4, r0
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 126              		.loc 1 253 0
 127 0004 074A     		ldr	r2, .L10
 128 0006 084B     		ldr	r3, .L10+4
 129 0008 1068     		ldr	r0, [r2]
 130              	.LVL2:
 131 000a A3FB0030 		umull	r3, r0, r3, r0
 132 000e 8009     		lsrs	r0, r0, #6
 133 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 134              	.LVL3:
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 135              		.loc 1 256 0
 136 0014 2146     		mov	r1, r4
 137 0016 0022     		movs	r2, #0
 138 0018 4FF0FF30 		mov	r0, #-1
 139 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 140              	.LVL4:
ARM GAS  /tmp/cc2jtrSv.s 			page 8


 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 141              		.loc 1 260 0
 142 0020 0020     		movs	r0, #0
 143 0022 10BD     		pop	{r4, pc}
 144              	.LVL5:
 145              	.L11:
 146              		.align	2
 147              	.L10:
 148 0024 00000000 		.word	SystemCoreClock
 149 0028 D34D6210 		.word	274877907
 150              		.cfi_endproc
 151              	.LFE70:
 153              		.section	.text.HAL_Init,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	HAL_Init
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	HAL_Init:
 163              	.LFB66:
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 164              		.loc 1 159 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 168              		.loc 1 168 0
 169 0000 074A     		ldr	r2, .L14
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 170              		.loc 1 159 0
 171 0002 08B5     		push	{r3, lr}
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 176              		.loc 1 168 0
 177 0004 1368     		ldr	r3, [r2]
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178              		.loc 1 173 0
 179 0006 0320     		movs	r0, #3
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 180              		.loc 1 168 0
 181 0008 43F01003 		orr	r3, r3, #16
 182 000c 1360     		str	r3, [r2]
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 183              		.loc 1 173 0
 184 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 185              	.LVL6:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 186              		.loc 1 176 0
 187 0012 0020     		movs	r0, #0
ARM GAS  /tmp/cc2jtrSv.s 			page 9


 188 0014 FFF7FEFF 		bl	HAL_InitTick
 189              	.LVL7:
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 190              		.loc 1 179 0
 191 0018 FFF7FEFF 		bl	HAL_MspInit
 192              	.LVL8:
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 193              		.loc 1 183 0
 194 001c 0020     		movs	r0, #0
 195 001e 08BD     		pop	{r3, pc}
 196              	.L15:
 197              		.align	2
 198              	.L14:
 199 0020 00200240 		.word	1073881088
 200              		.cfi_endproc
 201              	.LFE66:
 203              		.section	.text.HAL_IncTick,"ax",%progbits
 204              		.align	1
 205              		.p2align 2,,3
 206              		.weak	HAL_IncTick
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu softvfp
 212              	HAL_IncTick:
 213              	.LFB71:
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
ARM GAS  /tmp/cc2jtrSv.s 			page 10


 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in Systick ISR.
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 214              		.loc 1 299 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick++;
 219              		.loc 1 300 0
 220 0000 024A     		ldr	r2, .L17
 221 0002 1368     		ldr	r3, [r2]
 222 0004 0133     		adds	r3, r3, #1
 223 0006 1360     		str	r3, [r2]
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 224              		.loc 1 301 0
 225 0008 7047     		bx	lr
 226              	.L18:
 227 000a 00BF     		.align	2
 228              	.L17:
 229 000c 00000000 		.word	uwTick
 230              		.cfi_endproc
 231              	.LFE71:
 233              		.section	.text.HAL_GetTick,"ax",%progbits
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	HAL_GetTick
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu softvfp
 242              	HAL_GetTick:
 243              	.LFB72:
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak  to be overwritten  in case of other 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 244              		.loc 1 310 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 249              		.loc 1 311 0
 250 0000 014B     		ldr	r3, .L20
 251 0002 1868     		ldr	r0, [r3]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
ARM GAS  /tmp/cc2jtrSv.s 			page 11


 252              		.loc 1 312 0
 253 0004 7047     		bx	lr
 254              	.L21:
 255 0006 00BF     		.align	2
 256              	.L20:
 257 0008 00000000 		.word	uwTick
 258              		.cfi_endproc
 259              	.LFE72:
 261              		.section	.text.HAL_Delay,"ax",%progbits
 262              		.align	1
 263              		.p2align 2,,3
 264              		.weak	HAL_Delay
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	HAL_Delay:
 271              	.LFB73:
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 272              		.loc 1 326 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL9:
 277 0000 30B5     		push	{r4, r5, lr}
 278              	.LCFI3:
 279              		.cfi_def_cfa_offset 12
 280              		.cfi_offset 4, -12
 281              		.cfi_offset 5, -8
 282              		.cfi_offset 14, -4
 283 0002 83B0     		sub	sp, sp, #12
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 24
 286              		.loc 1 326 0
 287 0004 0190     		str	r0, [sp, #4]
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 288              		.loc 1 327 0
 289 0006 FFF7FEFF 		bl	HAL_GetTick
 290              	.LVL10:
 291 000a 0546     		mov	r5, r0
 292              	.LVL11:
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 293              		.loc 1 328 0
 294 000c 019C     		ldr	r4, [sp, #4]
ARM GAS  /tmp/cc2jtrSv.s 			page 12


 295              	.LVL12:
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a period to guarantee minimum wait */
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 296              		.loc 1 331 0
 297 000e 631C     		adds	r3, r4, #1
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****      wait++;
 298              		.loc 1 333 0
 299 0010 18BF     		it	ne
 300 0012 0134     		addne	r4, r4, #1
 301              	.LVL13:
 302              	.L24:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 303              		.loc 1 336 0 discriminator 1
 304 0014 FFF7FEFF 		bl	HAL_GetTick
 305              	.LVL14:
 306 0018 401B     		subs	r0, r0, r5
 307 001a A042     		cmp	r0, r4
 308 001c FAD3     		bcc	.L24
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 309              		.loc 1 339 0
 310 001e 03B0     		add	sp, sp, #12
 311              	.LCFI5:
 312              		.cfi_def_cfa_offset 12
 313              		@ sp needed
 314 0020 30BD     		pop	{r4, r5, pc}
 315              		.cfi_endproc
 316              	.LFE73:
 318 0022 00BF     		.section	.text.HAL_SuspendTick,"ax",%progbits
 319              		.align	1
 320              		.p2align 2,,3
 321              		.weak	HAL_SuspendTick
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu softvfp
 327              	HAL_SuspendTick:
 328              	.LFB74:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 329              		.loc 1 352 0
ARM GAS  /tmp/cc2jtrSv.s 			page 13


 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 334              		.loc 1 354 0
 335 0000 024A     		ldr	r2, .L31
 336 0002 1368     		ldr	r3, [r2]
 337 0004 23F00203 		bic	r3, r3, #2
 338 0008 1360     		str	r3, [r2]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 339              		.loc 1 355 0
 340 000a 7047     		bx	lr
 341              	.L32:
 342              		.align	2
 343              	.L31:
 344 000c 10E000E0 		.word	-536813552
 345              		.cfi_endproc
 346              	.LFE74:
 348              		.section	.text.HAL_ResumeTick,"ax",%progbits
 349              		.align	1
 350              		.p2align 2,,3
 351              		.weak	HAL_ResumeTick
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	HAL_ResumeTick:
 358              	.LFB75:
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 359              		.loc 1 368 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 364              		.loc 1 370 0
 365 0000 024A     		ldr	r2, .L34
 366 0002 1368     		ldr	r3, [r2]
 367 0004 43F00203 		orr	r3, r3, #2
 368 0008 1360     		str	r3, [r2]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 369              		.loc 1 371 0
ARM GAS  /tmp/cc2jtrSv.s 			page 14


 370 000a 7047     		bx	lr
 371              	.L35:
 372              		.align	2
 373              	.L34:
 374 000c 10E000E0 		.word	-536813552
 375              		.cfi_endproc
 376              	.LFE75:
 378              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 379              		.align	1
 380              		.p2align 2,,3
 381              		.global	HAL_GetHalVersion
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	HAL_GetHalVersion:
 388              	.LFB76:
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 389              		.loc 1 378 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  return __STM32F1xx_HAL_VERSION;
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 394              		.loc 1 380 0
 395 0000 0048     		ldr	r0, .L37
 396 0002 7047     		bx	lr
 397              	.L38:
 398              		.align	2
 399              	.L37:
 400 0004 00010101 		.word	16843008
 401              		.cfi_endproc
 402              	.LFE76:
 404              		.section	.text.HAL_GetREVID,"ax",%progbits
 405              		.align	1
 406              		.p2align 2,,3
 407              		.global	HAL_GetREVID
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	HAL_GetREVID:
 414              	.LFB77:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
ARM GAS  /tmp/cc2jtrSv.s 			page 15


 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 415              		.loc 1 394 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 420              		.loc 1 395 0
 421 0000 014B     		ldr	r3, .L40
 422 0002 1868     		ldr	r0, [r3]
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 423              		.loc 1 396 0
 424 0004 000C     		lsrs	r0, r0, #16
 425 0006 7047     		bx	lr
 426              	.L41:
 427              		.align	2
 428              	.L40:
 429 0008 002004E0 		.word	-536600576
 430              		.cfi_endproc
 431              	.LFE77:
 433              		.section	.text.HAL_GetDEVID,"ax",%progbits
 434              		.align	1
 435              		.p2align 2,,3
 436              		.global	HAL_GetDEVID
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu softvfp
 442              	HAL_GetDEVID:
 443              	.LFB78:
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 444              		.loc 1 410 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 449              		.loc 1 411 0
ARM GAS  /tmp/cc2jtrSv.s 			page 16


 450 0000 024B     		ldr	r3, .L43
 451 0002 1868     		ldr	r0, [r3]
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 452              		.loc 1 412 0
 453 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 454 0008 7047     		bx	lr
 455              	.L44:
 456 000a 00BF     		.align	2
 457              	.L43:
 458 000c 002004E0 		.word	-536600576
 459              		.cfi_endproc
 460              	.LFE78:
 462              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 463              		.align	1
 464              		.p2align 2,,3
 465              		.global	HAL_DBGMCU_EnableDBGSleepMode
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu softvfp
 471              	HAL_DBGMCU_EnableDBGSleepMode:
 472              	.LFB79:
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 473              		.loc 1 419 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 478              		.loc 1 420 0
 479 0000 024A     		ldr	r2, .L46
 480 0002 5368     		ldr	r3, [r2, #4]
 481 0004 43F00103 		orr	r3, r3, #1
 482 0008 5360     		str	r3, [r2, #4]
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 483              		.loc 1 421 0
 484 000a 7047     		bx	lr
 485              	.L47:
 486              		.align	2
 487              	.L46:
 488 000c 002004E0 		.word	-536600576
 489              		.cfi_endproc
 490              	.LFE79:
 492              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 493              		.align	1
 494              		.p2align 2,,3
 495              		.global	HAL_DBGMCU_DisableDBGSleepMode
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu softvfp
ARM GAS  /tmp/cc2jtrSv.s 			page 17


 501              	HAL_DBGMCU_DisableDBGSleepMode:
 502              	.LFB80:
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 503              		.loc 1 435 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 508              		.loc 1 436 0
 509 0000 024A     		ldr	r2, .L49
 510 0002 5368     		ldr	r3, [r2, #4]
 511 0004 23F00103 		bic	r3, r3, #1
 512 0008 5360     		str	r3, [r2, #4]
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 513              		.loc 1 437 0
 514 000a 7047     		bx	lr
 515              	.L50:
 516              		.align	2
 517              	.L49:
 518 000c 002004E0 		.word	-536600576
 519              		.cfi_endproc
 520              	.LFE80:
 522              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 523              		.align	1
 524              		.p2align 2,,3
 525              		.global	HAL_DBGMCU_EnableDBGStopMode
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	HAL_DBGMCU_EnableDBGStopMode:
 532              	.LFB81:
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
ARM GAS  /tmp/cc2jtrSv.s 			page 18


 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer 
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode  
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 533              		.loc 1 465 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 538              		.loc 1 466 0
 539 0000 024A     		ldr	r2, .L52
 540 0002 5368     		ldr	r3, [r2, #4]
 541 0004 43F00203 		orr	r3, r3, #2
 542 0008 5360     		str	r3, [r2, #4]
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 543              		.loc 1 467 0
 544 000a 7047     		bx	lr
 545              	.L53:
 546              		.align	2
 547              	.L52:
 548 000c 002004E0 		.word	-536600576
 549              		.cfi_endproc
 550              	.LFE81:
 552              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 553              		.align	1
 554              		.p2align 2,,3
 555              		.global	HAL_DBGMCU_DisableDBGStopMode
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 561              	HAL_DBGMCU_DisableDBGStopMode:
 562              	.LFB82:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
ARM GAS  /tmp/cc2jtrSv.s 			page 19


 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 563              		.loc 1 481 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 568              		.loc 1 482 0
 569 0000 024A     		ldr	r2, .L55
 570 0002 5368     		ldr	r3, [r2, #4]
 571 0004 23F00203 		bic	r3, r3, #2
 572 0008 5360     		str	r3, [r2, #4]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 573              		.loc 1 483 0
 574 000a 7047     		bx	lr
 575              	.L56:
 576              		.align	2
 577              	.L55:
 578 000c 002004E0 		.word	-536600576
 579              		.cfi_endproc
 580              	.LFE82:
 582              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 583              		.align	1
 584              		.p2align 2,,3
 585              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu softvfp
 591              	HAL_DBGMCU_EnableDBGStandbyMode:
 592              	.LFB83:
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 593              		.loc 1 497 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 598              		.loc 1 498 0
 599 0000 024A     		ldr	r2, .L58
 600 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc2jtrSv.s 			page 20


 601 0004 43F00403 		orr	r3, r3, #4
 602 0008 5360     		str	r3, [r2, #4]
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 603              		.loc 1 499 0
 604 000a 7047     		bx	lr
 605              	.L59:
 606              		.align	2
 607              	.L58:
 608 000c 002004E0 		.word	-536600576
 609              		.cfi_endproc
 610              	.LFE83:
 612              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 613              		.align	1
 614              		.p2align 2,,3
 615              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu softvfp
 621              	HAL_DBGMCU_DisableDBGStandbyMode:
 622              	.LFB84:
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 623              		.loc 1 513 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 628              		.loc 1 514 0
 629 0000 024A     		ldr	r2, .L61
 630 0002 5368     		ldr	r3, [r2, #4]
 631 0004 23F00403 		bic	r3, r3, #4
 632 0008 5360     		str	r3, [r2, #4]
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 633              		.loc 1 515 0
 634 000a 7047     		bx	lr
 635              	.L62:
 636              		.align	2
 637              	.L61:
 638 000c 002004E0 		.word	-536600576
 639              		.cfi_endproc
 640              	.LFE84:
 642              		.section	.text.HAL_GetUID,"ax",%progbits
 643              		.align	1
ARM GAS  /tmp/cc2jtrSv.s 			page 21


 644              		.p2align 2,,3
 645              		.global	HAL_GetUID
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu softvfp
 651              	HAL_GetUID:
 652              	.LFB85:
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID: pointer to 3 words array.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 653              		.loc 1 523 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL15:
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 659              		.loc 1 524 0
 660 0000 044B     		ldr	r3, .L64
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 661              		.loc 1 525 0
 662 0002 054A     		ldr	r2, .L64+4
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 663              		.loc 1 524 0
 664 0004 1968     		ldr	r1, [r3]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 665              		.loc 1 526 0
 666 0006 0833     		adds	r3, r3, #8
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 667              		.loc 1 524 0
 668 0008 0160     		str	r1, [r0]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 669              		.loc 1 525 0
 670 000a 1268     		ldr	r2, [r2]
 671 000c 4260     		str	r2, [r0, #4]
 672              		.loc 1 526 0
 673 000e 1B68     		ldr	r3, [r3]
 674 0010 8360     		str	r3, [r0, #8]
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 675              		.loc 1 527 0
 676 0012 7047     		bx	lr
 677              	.L65:
 678              		.align	2
 679              	.L64:
 680 0014 E8F7FF1F 		.word	536868840
 681 0018 ECF7FF1F 		.word	536868844
 682              		.cfi_endproc
 683              	.LFE85:
 685              		.comm	uwTick,4,4
 686              		.text
 687              	.Letext0:
ARM GAS  /tmp/cc2jtrSv.s 			page 22


 688              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 689              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 690              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 691              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 692              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 693              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 694              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 695              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 696              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 697              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 698              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc2jtrSv.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
     /tmp/cc2jtrSv.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc2jtrSv.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc2jtrSv.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc2jtrSv.s:46     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc2jtrSv.s:57     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc2jtrSv.s:65     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc2jtrSv.s:99     .text.HAL_DeInit:000000000000001c $d
     /tmp/cc2jtrSv.s:104    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc2jtrSv.s:112    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc2jtrSv.s:148    .text.HAL_InitTick:0000000000000024 $d
     /tmp/cc2jtrSv.s:154    .text.HAL_Init:0000000000000000 $t
     /tmp/cc2jtrSv.s:162    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc2jtrSv.s:199    .text.HAL_Init:0000000000000020 $d
     /tmp/cc2jtrSv.s:204    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc2jtrSv.s:212    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc2jtrSv.s:229    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/cc2jtrSv.s:234    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc2jtrSv.s:242    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc2jtrSv.s:257    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc2jtrSv.s:262    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc2jtrSv.s:270    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc2jtrSv.s:319    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc2jtrSv.s:327    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc2jtrSv.s:344    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cc2jtrSv.s:349    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc2jtrSv.s:357    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc2jtrSv.s:374    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cc2jtrSv.s:379    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc2jtrSv.s:387    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc2jtrSv.s:400    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc2jtrSv.s:405    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc2jtrSv.s:413    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc2jtrSv.s:429    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc2jtrSv.s:434    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc2jtrSv.s:442    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc2jtrSv.s:458    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc2jtrSv.s:463    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:471    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cc2jtrSv.s:488    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cc2jtrSv.s:493    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:501    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cc2jtrSv.s:518    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cc2jtrSv.s:523    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:531    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc2jtrSv.s:548    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc2jtrSv.s:553    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:561    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc2jtrSv.s:578    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc2jtrSv.s:583    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:591    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc2jtrSv.s:608    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc2jtrSv.s:613    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cc2jtrSv.s:621    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc2jtrSv.s:638    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
ARM GAS  /tmp/cc2jtrSv.s 			page 24


     /tmp/cc2jtrSv.s:643    .text.HAL_GetUID:0000000000000000 $t
     /tmp/cc2jtrSv.s:651    .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/cc2jtrSv.s:680    .text.HAL_GetUID:0000000000000014 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
